<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:th="http://www.thymeleaf.org"
      xmlns:layout="http://www.ultraq.net.nz/thymeleaf/layout"
      layout:decorate="layout" th:with="title='daily-recommend'">

<script src='https://kit.fontawesome.com/a076d05399.js' crossorigin='anonymous'></script>

<div layout:fragment="content" class="container" style="background-color: #FFFFFF;">

<<<<<<< HEAD
    <!-- bootstrap 5.0.0-->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.min.js" integrity="sha384-j0CNLUeiqtyaRmlzUHCPZ+Gy5fQu0dQ6eZ/xAww941Ai1SxSY+0EQqNXNE6DZiVc" crossorigin="anonymous"></script>

    <div class="container">
        <link rel="preconnect" href="https://fonts.gstatic.com">
        <link href="https://fonts.googleapis.com/css2?family=Gamja+Flower&display=swap" rel="stylesheet">
        <style>
            h2{
                font-family: 'Gamja Flower', cursive;
                font-size: 40px;
            }
            tr, td, th, img ,p, span{
                font-family: 'Gamja Flower', cursive;
                font-size: 25px;
            }
        </style>

        <h1>&nbsp</h1>
        <p>&nbsp</p>
        <p>&nbsp</p>
        <!--현재 날씨-->
        <div class="row">
            <div class="col-md-4"></div>
            <div class="col-md-4">
                <!--날씨 아이콘-->
                <div id="loadWeatherIcon"></div>
            </div>
            <div class="col-md-4"></div>
        </div>
        <p>&nbsp</p>
        <!--현재 온도-->
        <div class="row">
            <span id = "loadWeather">
                <div class="spinner-border text-primary" role="status"></div>
            </span>
        </div>

        <div class="row">
            <p>&nbsp</p>
            <!--시계-->
            <span id="clock">00:00</span>
        </div>
        <hr style="color:#FFFFFF;">

        <!--현위치 주소-->
        <div class="row">
            <span id="full_address">현재 위치 로드중...</span>
            <h1> </h1>
        </div>

        <hr style="color: #FFFFFF">
        <div class="row">
            <h1> </h1>
            <div class="col-md-2"></div>
            <div class="col-md-8">
                <h2>오늘 이 옷은 어떨까요?</h2>
                <div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="carousel">
                    <div class="carousel-indicators">
                        <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
                        <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="1" aria-label="Slide 2"></button>
                        <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="2" aria-label="Slide 3"></button>
                    </div>
                    <div class="carousel-inner">
                        <div class="carousel-item active">
                            <img th:src="@{${outer.mainUrl}}" class="d-block w-100" alt="1번 이미지">
                        </div>
                        <div class="carousel-item">
                            <img th:src="@{${top.mainUrl}}" class="d-block w-100" alt="2번 이미지">
                        </div>
                        <div class="carousel-item">
                            <img th:src="@{${bottom.mainUrl}}" class="d-block w-100" alt="3번 이미지">
                        </div>
                    </div>
                    <button class="carousel-control-prev" style="background-color: #FFFFFF" type="button" onclick="$('#carouselExampleIndicators').carousel('prev')" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" style="background-color: #FFFFFF" onclick="$('#carouselExampleIndicators').carousel('next')" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            </div>
            <div class="col-md-2"></div>
        </div>
        <hr>
        <div class="row">

        </div>
        <!--시계 스크립트-->
        <script>
            var clockTarget = document.getElementById("clock");
            function clock() {
                var date = new Date();
                var month = date.getMonth();
                var clockDate = date.getDate();
                var day = date.getDay();
                var week = ['일', '월', '화', '수', '목', '금', '토'];
                var hours = date.getHours();
                var minutes = date.getMinutes();
                var seconds = date.getSeconds();
                clockTarget .innerText = `${month+1}월 ${clockDate}일 ${week[day]}요일` +
                    `${hours < 10 ? `0${hours}` : hours}:${minutes < 10 ? `0${minutes }`  : minutes }:${seconds < 10 ? `0${seconds }`  : seconds }`;
                // 월은 0부터 1월이기때문에 +1일
                // 시간 분 초는 한자리수이면 시계가 어색해보일까봐 10보다 작으면 앞에0을 붙혀주는 작업을 3항연산으로
            }
            function init() {
                clock();
// 최초에 함수를 한번 실행시켜주고
                setInterval(clock, 1000);
// setInterval이라는 함수로 매초마다 실행
// 1000 = 1초
            }
            init();
        </script>
        <!--현재 위치값(좌표,주소값) 스크립트 -->
        <script>
            const KEY ="AIzaSyBRIdueEX0Qeqz8Wyztxks_rSof_IdTNWM";
            let url;
            let city;
            let city_address;
            let city_adress2;
            var full_address = document.getElementById("full_address")

            navigator.geolocation.getCurrentPosition(function(pos) {
                var latitude = pos.coords.latitude;
                var longitude = pos.coords.longitude;
                url = "https://maps.googleapis.com/maps/api/geocode/json?latlng="+latitude+","+longitude+"&key="+KEY;

                console.log("lat: "+latitude+", lng:"+longitude);

                fetch(url)
                    .then(response => response.json())
                    .then(data => {
                        //console.log(data);
                        let parts = data.results[0].formatted_address
                        city = parts.split(" ")[1];
                        city_address = parts.split(" ")[2]; // ex) 마포구
                        city_adress2 = parts.split(" ")[3]; // ~~1가
                        full_address.innerText = city + " " + city_address + " " +city_adress2;
                        console.log(city+" fetch");

                        $("#locationBtn").click(function() {
                            window.location.href = '/daily-recommend?city=' + city;//
                        });
                    });
            });
            //   });
            //   $("#locationBtn").click(function(){
            //        e.preventDefault();
            //        console.log(city+" ajax");
            //        let geolocation = {city};
            //        $.ajax({
            //            url : "/daily-recommend",
            //            type : "GET",
            //            data : geolocation,
            //            success : function(data) {
            //                // alert(data);
            //            },
            //        })//ajax
            //   // });
            //    });
        </script>

        <script>
            //openWeatherMap 으로 오늘 실시간 날씨 + 아이콘 받기
            const OpenWeatherKey = "32dfb5f4525c5b244a15ba405f09c370";
            var currentWeather = document.getElementById("loadWeather");
            var loadWeatherIcon = document.getElementById("loadWeatherIcon");

            navigator.geolocation.getCurrentPosition(function (pos) {
                var latitude = pos.coords.latitude;
                var longitude = pos.coords.longitude;
                let openWeatherUrl = "http://api.openweathermap.org/data/2.5/weather?lat="+latitude+"&lon="+longitude+"&appid="+OpenWeatherKey;

                console.log("체크용 222 lat: "+latitude+", lng:"+longitude);
                fetch(openWeatherUrl)
                    .then(response => response.json())
                    .then(data => {
                        // console.log(data);
                        console.log("현재온도 : "+ (data.main.temp- 273.15) );
                        console.log("현재습도 : "+ data.main.humidity);
                        console.log("날씨 : "+ data.weather[0].main );
                        console.log("상세날씨설명 : "+ data.weather[0].description );
                        console.log("날씨 이미지 : "+ data.weather[0].icon );
                        console.log("바람   : "+ data.wind.speed );
                        console.log("나라   : "+ data.sys.country );
                        console.log("도시이름  : "+ data.name );
                        console.log("구름  : "+ (data.clouds.all) +"%" );

                        let temperature = Math.floor(data.main.temp- 273.15);
                        let weather = data.weather[0].main;
                        let weatherDetail = data.weather[0].description;
                        //let image = data.weather[0].icon;
                        let icon = "http://openweathermap.org/img/w/"+data.weather[0].icon+".png";
                        currentWeather.innerText = temperature +"°C";
                        switch (data.weather[0].description){
                            case "clear sky":{
                                loadWeatherIcon.innerHTML="<i class='fas fa-sun fa-5x'></i>"
                                break;
                            }
                            case "few clouds":{
                                loadWeatherIcon.innerHTML="<i class='fas fa-cloud-su fa-5x'></i>"
                                break;
                            }
                            case "scattered clouds": case "broken clouds":{
                                loadWeatherIcon.innerHTML="<i class='fas fa-cloud fa-5x'></i>"
                                break;
                            }
                            case "shower rain":{
                                loadWeatherIcon.innerHTML="<i class='fas fa-cloud-showers-heavy fa-5x'></i>"
                                break;
                            }
                            case "rain":{
                                loadWeatherIcon.innerHTML="<i class='fas fa-cloud-rain fa-5x'></i>"
                                break;
                            }
                            case "thunderstorm":{
                                loadWeatherIcon.innerHTML="<i class='fas fa-poo-storm fa-5x'></i>"
                                break;
                            }
                            case "snow":{
                                loadWeatherIcon.innerHTML="<i class='fas fa-snowflake fa-5x'></i>"
                                break;
                            }
                            case "mist":{
                                loadWeatherIcon.innerHTML="<i class='fas fa-smog fa-5x'></i>"
                                break;
                            }
                        }
                    });
            });
        </script>

=======
    <div id="recommendDiv">
        <!-- bootstrap 5.0.0-->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css"
              rel="stylesheet" integrity="sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6"
              crossorigin="anonymous">
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/js/bootstrap.min.js"
                integrity="sha384-j0CNLUeiqtyaRmlzUHCPZ+Gy5fQu0dQ6eZ/xAww941Ai1SxSY+0EQqNXNE6DZiVc"
                crossorigin="anonymous"></script>

        <div class="container">
            <link rel="preconnect" href="https://fonts.gstatic.com">
            <link href="https://fonts.googleapis.com/css2?family=Gamja+Flower&display=swap" rel="stylesheet">
            <!--        <style>-->
            <!--            h2{-->
            <!--                font-family: 'Gamja Flower', cursive;-->
            <!--                font-size: 40px;-->
            <!--            }-->
            <!--            tr, td, th, img ,p, span{-->
            <!--                font-family: 'Gamja Flower', cursive;-->
            <!--                font-size: 25px;-->
            <!--            }-->
            <!--        </style>-->

            <h2 id="pageLogo">Today's Weather</h2>
            <br><br/>
            <!--현재 날씨-->
            <div id="loadWeatherIcon"></div>
            <br/>

            <!--현재 온도-->
            <div class="row">
            <span id="loadWeather">
                <div class="spinner-border text-primary" role="status"></div>
            </span>
            </div>

            <div class="row">
                <span id="clock">00:00</span>
            </div>

            <!--현위치 주소-->
            <div class="row">
                <span id="full_address">Loading now location...</span>
            </div>

            <hr style="color: #FFFFFF">
            <div class="row">
                <div class="col-md-2"></div>
                <div class="col-md-8">
                    <h2 id="pageLogo">Today's Pick!</h2>
                    <small>How about this?</small>
                    <br/><br/>

                    <div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="carousel">
                        <div class="carousel-indicators">
                            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="0"
                                    class="active" aria-current="true" aria-label="Slide 1"></button>
                            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="1"
                                    aria-label="Slide 2"></button>
                            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="2"
                                    aria-label="Slide 3"></button>
                        </div>

                        <div class="carousel-inner">
                            <div class="carousel-item active">
                                <img id="carousel1" th:src="@{${outer.mainUrl}}" alt="1번 이미지">
                            </div>
                            <div class="carousel-item">
                                <img id="carousel2" th:src="@{${top.mainUrl}}" alt="2번 이미지">
                            </div>
                            <div class="carousel-item">
                                <img id="carousel3" th:src="@{${bottom.mainUrl}}" alt="3번 이미지">
                            </div>
                        </div>

                        <button class="carousel-control-prev" style="background-color: #FFFFFF" type="button"
                                onclick="$('#carouselExampleIndicators').carousel('prev')"
                                data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>

                        <button class="carousel-control-next" type="button" style="background-color: #FFFFFF"
                                onclick="$('#carouselExampleIndicators').carousel('next')"
                                data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>
                </div>

                <div class="col-md-2"></div>
            </div>


            <!--시계 스크립트-->
            <script>
                var clockTarget = document.getElementById("clock");

                function clock() {
                    var date = new Date();
                    var month = date.getMonth();
                    var clockDate = date.getDate();
                    var day = date.getDay();
                    var week = ['일', '월', '화', '수', '목', '금', '토'];
                    var hours = date.getHours();
                    var minutes = date.getMinutes();
                    var seconds = date.getSeconds();
                    clockTarget.innerText = `${month + 1}월 ${clockDate}일 ${week[day]}요일` +
                        `${hours < 10 ? `0${hours}` : hours}:${minutes < 10 ? `0${minutes}` : minutes}:${seconds < 10 ? `0${seconds}` : seconds}`;
                    // 월은 0부터 1월이기때문에 +1일
                    // 시간 분 초는 한자리수이면 시계가 어색해보일까봐 10보다 작으면 앞에0을 붙혀주는 작업을 3항연산으로
                }

                function init() {
                    clock();
// 최초에 함수를 한번 실행시켜주고
                    setInterval(clock, 1000);
// setInterval이라는 함수로 매초마다 실행
// 1000 = 1초
                }

                init();
            </script>
            <!--현재 위치값(좌표,주소값) 스크립트 -->
            <script>
                const KEY = "AIzaSyBRIdueEX0Qeqz8Wyztxks_rSof_IdTNWM";
                let url;
                let city;
                let city_address;
                let city_adress2;
                var full_address = document.getElementById("full_address")

                navigator.geolocation.getCurrentPosition(function (pos) {
                    var latitude = pos.coords.latitude;
                    var longitude = pos.coords.longitude;
                    url = "https://maps.googleapis.com/maps/api/geocode/json?latlng=" + latitude + "," + longitude + "&key=" + KEY;

                    console.log("lat: " + latitude + ", lng:" + longitude);

                    fetch(url)
                        .then(response => response.json())
                        .then(data => {
                            //console.log(data);
                            let parts = data.results[0].formatted_address
                            city = parts.split(" ")[1];
                            city_address = parts.split(" ")[2]; // ex) 마포구
                            city_adress2 = parts.split(" ")[3]; // ~~1가
                            full_address.innerText = city + " " + city_address + " " + city_adress2;
                            console.log(city + " fetch");

                            $("#locationBtn").click(function () {
                                window.location.href = '/daily-recommend?city=' + city;//
                            });
                        });
                });
                //   });
                //   $("#locationBtn").click(function(){
                //        e.preventDefault();
                //        console.log(city+" ajax");
                //        let geolocation = {city};
                //        $.ajax({
                //            url : "/daily-recommend",
                //            type : "GET",
                //            data : geolocation,
                //            success : function(data) {
                //                // alert(data);
                //            },
                //        })//ajax
                //   // });
                //    });
            </script>

            <script>
                //openWeatherMap 으로 오늘 실시간 날씨 + 아이콘 받기
                const OpenWeatherKey = "32dfb5f4525c5b244a15ba405f09c370";
                var currentWeather = document.getElementById("loadWeather");
                var loadWeatherIcon = document.getElementById("loadWeatherIcon");

                navigator.geolocation.getCurrentPosition(function (pos) {
                    var latitude = pos.coords.latitude;
                    var longitude = pos.coords.longitude;
                    let openWeatherUrl = "http://api.openweathermap.org/data/2.5/weather?lat=" + latitude + "&lon=" + longitude + "&appid=" + OpenWeatherKey;

                    console.log("체크용 222 lat: " + latitude + ", lng:" + longitude);
                    fetch(openWeatherUrl)
                        .then(response => response.json())
                        .then(data => {
                            // console.log(data);
                            console.log("현재온도 : " + (data.main.temp - 273.15));
                            console.log("현재습도 : " + data.main.humidity);
                            console.log("날씨 : " + data.weather[0].main);
                            console.log("상세날씨설명 : " + data.weather[0].description);
                            console.log("날씨 이미지 : " + data.weather[0].icon);
                            console.log("바람   : " + data.wind.speed);
                            console.log("나라   : " + data.sys.country);
                            console.log("도시이름  : " + data.name);
                            console.log("구름  : " + (data.clouds.all) + "%");

                            let temperature = Math.floor(data.main.temp - 273.15);
                            let weather = data.weather[0].main;
                            let weatherDetail = data.weather[0].description;
                            //let image = data.weather[0].icon;
                            let icon = "http://openweathermap.org/img/w/" + data.weather[0].icon + ".png";
                            currentWeather.innerText = temperature + "°C";
                            switch (data.weather[0].description) {
                                case "clear sky": {
                                    loadWeatherIcon.innerHTML = "<i class='fas fa-sun fa-5x'></i>"
                                    break;
                                }
                                case "few clouds": {
                                    loadWeatherIcon.innerHTML = "<i class='fas fa-cloud-su fa-5x'></i>"
                                    break;
                                }
                                case "scattered clouds":
                                case "broken clouds": {
                                    loadWeatherIcon.innerHTML = "<i class='fas fa-cloud fa-5x'></i>"
                                    break;
                                }
                                case "shower rain": {
                                    loadWeatherIcon.innerHTML = "<i class='fas fa-cloud-showers-heavy fa-5x'></i>"
                                    break;
                                }
                                case "rain": {
                                    loadWeatherIcon.innerHTML = "<i class='fas fa-cloud-rain fa-5x'></i>"
                                    break;
                                }
                                case "thunderstorm": {
                                    loadWeatherIcon.innerHTML = "<i class='fas fa-poo-storm fa-5x'></i>"
                                    break;
                                }
                                case "snow": {
                                    loadWeatherIcon.innerHTML = "<i class='fas fa-snowflake fa-5x'></i>"
                                    break;
                                }
                                case "mist": {
                                    loadWeatherIcon.innerHTML = "<i class='fas fa-smog fa-5x'></i>"
                                    break;
                                }
                            }
                        });
                });
            </script>
        </div>
>>>>>>> newheejin
    </div>
</div>

</html>